export declare const typeDefs = "#graphql\n  # Enums\n  enum UserRole {\n    ADMIN\n    B2B_CUSTOMER\n  }\n\n  enum OrderStatus {\n    PENDING\n    PAID\n    PROCESSING\n    SHIPPED\n    DELIVERED\n    CANCELLED\n  }\n\n  enum Unit {\n    KS\n    KG\n    L\n    BAL\n  }\n\n  # Types\n  type User {\n    id: ID!\n    email: String!\n    role: UserRole!\n    companyName: String\n    ico: String\n    dic: String\n    phone: String\n    street: String\n    city: String\n    zipCode: String\n    country: String\n    isActive: Boolean!\n    createdAt: String!\n    updatedAt: String!\n    orders: [Order!]!\n  }\n\n  type Category {\n    id: ID!\n    name: String!\n    slug: String!\n    description: String\n    isActive: Boolean!\n    sortOrder: Int!\n    createdAt: String!\n    updatedAt: String!\n    products: [Product!]!\n  }\n\n  type Product {\n    id: ID!\n    name: String!\n    slug: String!\n    description: String\n    basePrice: Float!\n    unit: Unit!\n    packageSize: Int\n    inStock: Boolean!\n    isActive: Boolean!\n    sortOrder: Int!\n    category: Category!\n    createdAt: String!\n    updatedAt: String!\n    # Cena pro p\u0159ihl\u00E1\u0161en\u00E9ho u\u017Eivatele (m\u016F\u017Ee b\u00FDt custom price)\n    currentPrice: Float!\n  }\n\n  type CustomPrice {\n    id: ID!\n    user: User!\n    product: Product!\n    price: Float!\n    createdAt: String!\n    updatedAt: String!\n  }\n\n  type Order {\n    id: ID!\n    orderNumber: String!\n    user: User!\n    status: OrderStatus!\n    subtotal: Float!\n    shipping: Float!\n    total: Float!\n    shippingStreet: String\n    shippingCity: String\n    shippingZipCode: String\n    shippingCountry: String\n    paymentId: String\n    paymentMethod: String\n    paidAt: String\n    customerNote: String\n    adminNote: String\n    trackingNumber: String\n    shippedAt: String\n    deliveredAt: String\n    createdAt: String!\n    updatedAt: String!\n    items: [OrderItem!]!\n  }\n\n  type OrderItem {\n    id: ID!\n    product: Product!\n    quantity: Int!\n    unitPrice: Float!\n    total: Float!\n  }\n\n  # Auth types\n  type AuthPayload {\n    token: String!\n    user: User!\n  }\n\n  # Input types\n  input RegisterInput {\n    email: String!\n    password: String!\n    companyName: String!\n    ico: String\n    dic: String\n    phone: String\n    street: String\n    city: String\n    zipCode: String\n    country: String\n  }\n\n  input LoginInput {\n    email: String!\n    password: String!\n  }\n\n  input CreateCategoryInput {\n    name: String!\n    slug: String!\n    description: String\n    sortOrder: Int\n  }\n\n  input UpdateCategoryInput {\n    name: String\n    slug: String\n    description: String\n    isActive: Boolean\n    sortOrder: Int\n  }\n\n  input CreateProductInput {\n    name: String!\n    slug: String!\n    description: String\n    basePrice: Float!\n    unit: Unit!\n    packageSize: Int\n    categoryId: ID!\n    sortOrder: Int\n  }\n\n  input UpdateProductInput {\n    name: String\n    slug: String\n    description: String\n    basePrice: Float\n    unit: Unit\n    packageSize: Int\n    inStock: Boolean\n    isActive: Boolean\n    categoryId: ID\n    sortOrder: Int\n  }\n\n  input CreateOrderInput {\n    items: [OrderItemInput!]!\n    shippingStreet: String\n    shippingCity: String\n    shippingZipCode: String\n    shippingCountry: String\n    customerNote: String\n  }\n\n  input OrderItemInput {\n    productId: ID!\n    quantity: Int!\n  }\n\n  input SetCustomPriceInput {\n    userId: ID!\n    productId: ID!\n    price: Float!\n  }\n\n  # Queries\n  type Query {\n    # Public queries\n    categories: [Category!]!\n    category(id: ID, slug: String): Category\n    products(categoryId: ID, search: String, limit: Int, offset: Int): [Product!]!\n    product(id: ID, slug: String): Product\n\n    # Authenticated queries\n    me: User\n    myOrders: [Order!]!\n    order(id: ID!): Order\n\n    # Admin queries\n    users: [User!]!\n    user(id: ID!): User\n    orders(status: OrderStatus, limit: Int, offset: Int): [Order!]!\n    customPrices(userId: ID, productId: ID): [CustomPrice!]!\n  }\n\n  # Mutations\n  type Mutation {\n    # Auth\n    register(input: RegisterInput!): AuthPayload!\n    login(input: LoginInput!): AuthPayload!\n\n    # Categories (Admin only)\n    createCategory(input: CreateCategoryInput!): Category!\n    updateCategory(id: ID!, input: UpdateCategoryInput!): Category!\n    deleteCategory(id: ID!): Boolean!\n\n    # Products (Admin only)\n    createProduct(input: CreateProductInput!): Product!\n    updateProduct(id: ID!, input: UpdateProductInput!): Product!\n    deleteProduct(id: ID!): Boolean!\n\n    # Orders\n    createOrder(input: CreateOrderInput!): Order!\n    updateOrderStatus(id: ID!, status: OrderStatus!): Order!\n    addTrackingNumber(id: ID!, trackingNumber: String!): Order!\n\n    # Custom prices (Admin only)\n    setCustomPrice(input: SetCustomPriceInput!): CustomPrice!\n    removeCustomPrice(userId: ID!, productId: ID!): Boolean!\n\n    # User management (Admin only)\n    updateUserStatus(id: ID!, isActive: Boolean!): User!\n  }\n";
//# sourceMappingURL=typeDefs.d.ts.map