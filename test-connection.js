const { PrismaClient } = require('@prisma/client');
const Redis = require('ioredis');

async function testConnections() {
    console.log('üîç Testov√°n√≠ p≈ôipojen√≠ k Railway slu≈æb√°m...\n');

    // Pou≈æij PUBLIC URLs pro extern√≠ p≈ôipojen√≠
    const DATABASE_URL = process.env.DATABASE_PUBLIC_URL || process.env.DATABASE_URL;
    const REDIS_URL = process.env.REDIS_PUBLIC_URL || process.env.REDIS_URL;

    console.log('üîç Environment variables:');
    console.log('DATABASE_URL:', DATABASE_URL ? 'SET' : 'NOT SET');
    console.log('REDIS_URL:', REDIS_URL ? 'SET' : 'NOT SET');
    console.log('');

    // Test PostgreSQL p≈ôipojen√≠
    console.log('üìä Testov√°n√≠ PostgreSQL p≈ôipojen√≠...');
    const prisma = new PrismaClient({
        datasources: {
            db: {
                url: DATABASE_URL
            }
        }
    });

    try {
        await prisma.$connect();
        console.log('‚úÖ PostgreSQL p≈ôipojen√≠ √∫spƒõ≈°n√©!');

        // Test z√°kladn√≠ query
        const result = await prisma.$queryRaw`SELECT version()`;
        console.log('üìã PostgreSQL verze:', result[0].version);

    } catch (error) {
        console.error('‚ùå PostgreSQL p≈ôipojen√≠ selhalo:', error.message);
    } finally {
        await prisma.$disconnect();
    }

    console.log('\nüî¥ Testov√°n√≠ Redis p≈ôipojen√≠...');

    // Test Redis p≈ôipojen√≠
    const redis = new Redis(REDIS_URL || 'redis://localhost:6379');

    try {
        await redis.ping();
        console.log('‚úÖ Redis p≈ôipojen√≠ √∫spƒõ≈°n√©!');

        // Test z√°kladn√≠ operace
        await redis.set('test-key', 'test-value');
        const value = await redis.get('test-key');
        console.log('üìã Redis test:', value === 'test-value' ? 'OK' : 'FAILED');

        // Cleanup
        await redis.del('test-key');

    } catch (error) {
        console.error('‚ùå Redis p≈ôipojen√≠ selhalo:', error.message);
    } finally {
        redis.disconnect();
    }

    console.log('\nüéâ Test p≈ôipojen√≠ dokonƒçen!');
}

// Spu≈°tƒõn√≠ testu
testConnections().catch(console.error); 